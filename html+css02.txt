1.对WEB标准以及W3C的理解与认识   +++
标签闭合、标签小写、不乱嵌套、提高搜索机器人搜索几率、使用外 链css和js脚本、结构行为表现的分离、文件下载与页面速度更快、内容能被更多的用户所访问、内容能被更广泛的设备所访问、更少的代码和组件，容易维 护、改版方便，不需要变动页面内容、提供打印版本而不需要复制内容、提高网站易用性；

2.xhtml和html有什么区别    ++++
HTML是一种基本的WEB网页设计语言，XHTML是一个基于XML的置标语言
最主要的不同：
XHTML 元素必须被正确地嵌套。
XHTML 元素必须被关闭。
标签名必须用小写字母。
XHTML 文档必须拥有根元素。

3.Doctype? 严格模式与混杂模式-如何触发这两种模式，区分它们有何意义? 
区别：严格模式是浏览器根据规范去显示页面；混杂模式是以一种向后兼容的方式去显示

意义：决定浏览器如何渲染网站（浏览器使用那种规范去解析网页）

触发：浏览器根据doctype是否存在和使用的是那种dtd来决定。
      告知浏览器用什么文档标准来解析这个文档

4.行内元素有哪些?块级元素有哪些?CSS的盒模型?
块级元素：div p h1 h2 h3 h4 form ul
行内元素: a b br i span input select
Css盒模型:内容，border ,margin，padding

5.CSS引入的方式有哪些? link和@import的区别是?   +++
内联 内嵌 外链 导入
两者都是外部引用CSS的方式，但是存在一定的区别：
区别1：link是XHTML标签，除了加载CSS外，还可以定义RSS等其他事务；@import属于CSS范畴，只能加载CSS。
区别2：link引用CSS时，在页面载入时同时加载；@import需要页面网页完全载入以后加载。
区别3：link是XHTML标签，无兼容问题；@import是在CSS2.1提出的，低版本的浏览器不支持。
区别4：link支持使用JavaScript控制DOM去改变样式；而@import不支持。

6.CSS选择符有哪些?哪些属性可以继承?优先级算法如何计算?内联和important哪个优先级高?
标签选择符 类选择符 id选择符
哪些属性可以继承：
color,font,酌情添加吧！不能继承的有width,height,border,margin,padding……
继承不如指定 Id>class>标签选择
后者优先级高

7.前端页面有哪三层构成，分别是什么?作用是什么?
结构层 Html 表示层 CSS 行为层 js

8.css的基本语句构成是?
选择器{属性1:值1;属性2:值2;……}

9.你做的页面在哪些流览器测试过?这些浏览器的内核分别是什么?
Ie(Ie内核) 火狐（Gecko） 谷歌（webkit） opear(Presto)

10.写出几种IE6 BUG的解决方法   ++++
1.双边距BUG float引起的 使用display
2.3像素问题 使用float引起的 使用dislpay:inline -3px
3.超链接hover 点击后失效 使用正确的书写顺序 link visited hover active
4.Ie z-index问题 给父级添加position:relative
5.Png 透明 使用js代码 改
6.Min-height 最小高度 ！Important 解决’
7.select 在ie6下遮盖 使用iframe嵌套
8.为什么没有办法定义1px左右的宽度容器（IE6默认的行高造成的，使用over:hidden,zoom:0.08 line-height:1px）

11.标签上title与alt属性的区别是什么?
Alt 当图片不显示是 用文字代表。
Title 为该属性提供信息

12.描述css reset的作用和用途。
Reset重置浏览器的css默认属性 浏览器的品种不同，样式不同，然后重置，让他们统一

13.解释css sprites，如何使用。
Css 精灵 把一堆小的图片整合到一张大的图片上，减轻服务器对图片的请求数量

14.浏览器标准模式和怪异模式之间的区别是什么?
盒子模型 渲染模式的不同
所谓的标准模式是指，浏览器按W3C标准解析执行代码；怪异模式则是使用浏览器自己的方式解析执行代码，因为不同浏览器解析执行的方式不一样，所以我们称之为怪异模式。浏览器解析时到底使用标准模式还是怪异模式，与你网页中的DTD声明直接相关，DTD声明定义了标准文档的类型（标准模式解析）文档类型，会使浏览器使用相应的方式加载网页并显示，忽略DTD声明,将使网页进入怪异模式(quirks mode)。

15.你如何对网站的文件和资源进行优化?期待的解决方案包括：
文件合并
文件最小化/文件压缩
使用CDN托管
缓存的使用

16.什么是语义化的HTML?
直观的认识标签 对于搜索引擎的抓取有好处

17.清除浮动的几种方式，各自的优缺点
1.使用空标签清除浮动 clear:both（理论上能清楚任何标签，，，增加无意义的标签）
2.使用overflow:auto（空标签元素清除浮动而不得不增加无意代码的弊端,,使用zoom:1用于兼容IE）
3.是用afert伪元素清除浮动(用于非IE浏览器)

18.css3有哪些新特性？
1.强大的选择器：
  通用选择器，id选择器，类选择器，标签选择器，元素选择器，后代选择器，子元素选择器，伪类选择器，相邻兄弟元素选择器，属性选择器，结构伪类选择器
2.半透明效果的实现
  使用opacity属性定义元素的不透明度
3.多栏布局
4.多背景图
5.文字阴影
  text-shadow
6.开放字体类型
  @font-face
7.圆角
  border-radius
8.边框图片
  border-image
9.盒子阴影
  box-shadow
10.媒体查询

19.行内元素可以使用margin和padding吗?

答：不起作用

20.如何实现div的水平垂直居中？

答：水平居中 设置一个宽度，然后margin : 0 auto;
    垂直居中  使用定位 left:50%;top:50%;设置margin的值

21.css中如何实现渐变效果 

答：linear-gradient(top/left,#ccc,#000);

22.解释下列词汇 
  HTML:超文本标记语言,专门编写网页内容的语言（可跳转的文本，从外部引入资源）
  XHTML:严格的HTML标准
  DHTML:动态的HTML技术，是HTML+CSS+JS的统称
  XML:可扩展的标记语言，标签名和属性名可自定义
  JSON:JavaScript Object Notation
  DOM:浏览器对象模型，用来访问和操纵浏览器窗口，使js有能力与浏览器"对话"
  BOM:文档对象模型，用来操作文档

23.介绍一下你对浏览器内核的理解？

答：浏览器的内核主要分成两部分，一个是渲染引擎和js引擎
    渲染引擎：负责取得网页的内容，整理讯息，计算网页的显示方式
    js引擎：解析和执行js代码来实现网页的动态效果

24.常见的浏览器内核有哪些？

答：trident内核：ie,360,搜狗浏览器等
      presto内核:opera浏览器
      webkit内核：safari，chrome

25.html5的form如何关闭自动完成功能？

答：给不想要提示的form或某个input设置为autocomplete=off。

26.label的作用是什么?如何使用？

答：label标签来定义表单控制间的关系,当用户选择该标签时，浏览器会自动将焦点转到和标签相关的表单控件上。

<label for="Name">Number:</label>
<input type=“text“name="Name" id="Name"/>

<label>Date:<input type="text" name="B"/></label>

27.如何实现多行文本溢出显示省略号？

答：text-overflow:ellipsis;属性

28.如何避免反复layout？

答：1.display:none
    2.interHTML批量删除或者替换元素
    3.fragment，创建平级节点

29.css新增的伪类有哪些？

答：p:first-of-type,last-of-type,only-of-type,only-child,nth-child(2),
:after,:before,:enable,:disabled,:checked

30.display的值有哪些值？说明他们的作用？

答：none     此元素不会被显示
    block    像块元素一样显示
    inline   内联元素，无换行符
    inline-block  行内块元素
    list-item   此元素作为列表显示
    table    此元素作为块级表格来显示
    inherit  规定应该从父元素继承display属性的值

31.用纯CSS创建一个三角形的原理是什么？

答：把上，中，下三条边隐藏掉
    width: 0;
    height: 0;
    border-width: 20px;
    border-style: solid;
    border-color: transparent transparent red     transparent;

32.在网页中的应该使用奇数还是偶数的字体？为什么呢？

答：用偶数的字体，更容易和其它部分构成比例

33.什么是浮动，以及常用的清除浮动的方法？

答：float即为浮动，在css中的作用是使元素脱离正常的普通流移动到父元素的最左边或者最右边，浮动会使父元素的高度变为0，破坏页面布局
    常用清除浮动的方法：
    1.父级定义伪类:after
      优点：浏览器支持好
      缺点：代码多
    2.overflow:hidden
      优点：简单，代码少，浏览器支持好
      缺点：不能和position配合使用
    3.结尾处加空div标签clear:both
      优点：简单，代码少，浏览器支持好
      缺点：增加很多空div
      
清除浮动的高端方法

答：.clearfix:before,.clearfix:after {
        content:"";
        display:table;
    }
    .clearfix:after{clear:both;}
    .clearfix{
        *zoom:1;/*IE/7/6*/
    }

34.如何处理html5的新标签浏览器兼容性问题

答：IE6/7/8可通过document.createElement方法产生新的标签，还需要添加标签的默认样式
    也可以直接引入成熟的框架

35.解释一下css3的弹性盒布局模型以及适用场景

答：flexbox布局，就是可以自动调整元素的高和宽，来很好的填充不同屏幕的显示设备的可用显示空间，收缩内容防止内容溢出，确保元素拥有恰当的行为的布局方式。适用于响应式网页的开发

36.浏览器如何解析css选择器

答：浏览器先产生一个元素集合，这个集合往往由最后一个部分的索引产生(如果没有索引就是所有元素的集合)。然后向上匹配，如果不符合上一个部分，就把元素从集合中删除，直到这个选择器匹配完，还在集合中的元素就匹配这个选择器了

37.meta元素的作用
  指定关于html文档的信息

38.想要在鼠标指向这个图像时浮出一条提示信息，应该使用(alt)

39.常见的图片格式对比
  BMP
  优点：支持1-24位颜色深度，bmp格式与现有windows程序广泛兼容
  缺点：不支持压缩，不受web浏览器支持
  
  PNG
  优点：png支持高级别无损耗压缩，支持alpha通道透明度，png支持伽马校正，支持交错，受最新的web浏览器支持
  缺点：老式浏览器和程序可能不支持png文件，作为internet文件格式，与jpeg的有损压缩相比，png提供的压缩量少，作为internet文件格式，png对多图像文件或动画文件不提供支持，GIF格式支持多图像文件和动画文件

  JPEG
  优点：jpeg的摄影作品或者写实作品支持高级压缩，利用可变的压缩比可以控制文件大小，支持交错，支持internet标准
  缺点：有损压缩会使图片质量下降，不适用所含颜色少，具有大块颜色相近的区域或亮度差异十分明显的较简单图片

  GIF
  优点：GIF广泛支持internet标准，支持无损压缩和透明度，动画gif很流行
  缺点：GIF只支持256色调色板，会丢失颜色信息，无损压缩效果不好，没有半透明效果或褪色效果

40.如何在新窗口中打开链接
  <a href="url" target="_blank"> 

41.javascript定义数组的方法
  var a=new Array();
  var b=new Array(8);
  var c=new Array("1","2","3");
  var d=["1","2","3"];

42.如何在浏览器的状态栏放入一条消息？
   window.status = "put your message here"

43.下列不属于文档对象的方法的是（C）  
   A） createElement 
   B） getElementById 
   C） getElementByName 
   D） forms.length

44．通常情况下，一个URL的格式是（C）  
   A） 协议//路径名称主机：端口/#哈希标 识？搜索条件     B） 协议//主机：端口/#哈希标识/路径 名称？搜索条件    C） 协议//主机：端口/路径名称？搜索 条件  
   D） 协议//主机：端口？搜索条件/路径 名称#哈希标识

45.canvas的用途

答：完成HTML页面中的图形绘制；实现网页游戏；在HTML中绘制图表

46.如何使用Canvas

答：在html页面中定义<canvas>元素，使用width和height属性来设置<canvas>元素的宽度和高度；在js中获取HTML中的<canvas>元素，通过getContext()方法创建画布对象，使用Canvas提供的API完成需求










